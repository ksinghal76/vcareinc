<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  <display-name>MyProject</display-name>  
  <!-- The master configuration file for this Spring web application -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			/WEB-INF/web-application-config.xml
		</param-value>
	</context-param>    
	
	<!-- Loads the Spring web application context -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	 <servlet>
	     <servlet-name>Spring MVC Dispatcher Servlet</servlet-name>
	     <servlet-class>com.vcareinc.utils.SpringDispatcherServlet</servlet-class>
	     <init-param>
	         <param-name>contextConfigLocation</param-name>
	         <param-value></param-value>
	     </init-param>
	     <load-on-startup>1</load-on-startup>
	 </servlet>
	<servlet-mapping>
	    <servlet-name>Spring MVC Dispatcher Servlet</servlet-name>
	    <url-pattern>/spring/*</url-pattern>
	</servlet-mapping>
	  
  <!-- Just here so the JSF implementation can initialize, *not* used at runtime -->
	<servlet>
	    <servlet-name>Faces Servlet</servlet-name>
	    <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
	    <load-on-startup>1</load-on-startup>
	</servlet>
	    
	<!-- Just here so the JSF implementation can initialize -->
	<servlet-mapping>
	    <servlet-name>Faces Servlet</servlet-name>
	    <url-pattern>*.faces</url-pattern>
	</servlet-mapping>
	
	<!-- ============== Configuration Listener ============== -->
	<!--
	      This ServletContextListener initializes the runtime environment
	      of the JavaServer Faces Reference Implementation when a web
	      application including it is initialized by the container.
	-->
	<listener>
	   <listener-class>com.sun.faces.config.ConfigureListener</listener-class>
	</listener>
	
	<context-param>
	    <param-name>com.sun.faces.validateXml</param-name>
	    <param-value>false</param-value>
	</context-param>
	
	<!-- Use JSF view templates saved as *.xhtml, for use with Facelets -->
	<context-param>
	    <param-name>javax.faces.DEFAULT_SUFFIX</param-name>
	    <param-value>.xhtml</param-value>
	</context-param>

	<!-- Serves static resource content from .jar files such as spring-faces.jar -->
	<servlet>
	    <servlet-name>Resource Servlet</servlet-name>
	    <servlet-class>org.springframework.js.resource.ResourceServlet</servlet-class>
	    <load-on-startup>0</load-on-startup>
	</servlet>
	        
	<!-- Map all /resources requests to the Resource Servlet for handling -->
	<servlet-mapping>
	    <servlet-name>Resource Servlet</servlet-name>
	    <url-pattern>/resources/*</url-pattern>
	</servlet-mapping>
	
	<context-param>
	    <param-name>javax.faces.FACELETS_LIBRARIES</param-name>
	    <param-value>/WEB-INF/springsecurity.taglib.xml</param-value>
	</context-param>
	
	<!-- Setup Log4j -->
	<context-param>
	    <param-name>log4jConfigLocation</param-name>
	    <param-value>/WEB-INF/log4j.properties</param-value>
	</context-param>
	
	<listener>
	    <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	
	<!-- Enables Spring Security -->
	 <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <filter-mapping>
      <filter-name>springSecurityFilterChain</filter-name>
      <url-pattern>/*</url-pattern>
    </filter-mapping>

  <!-- 
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
   -->
</web-app>